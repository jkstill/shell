head	1.3;
access;
symbols;
locks
	jkstill:1.3; strict;
comment	@# @;


1.3
date	2017.10.01.00.22.39;	author jkstill;	state Exp;
branches;
next	1.2;

1.2
date	2017.10.01.00.17.41;	author jkstill;	state Exp;
branches;
next	1.1;

1.1
date	2017.10.01.00.08.09;	author jkstill;	state Exp;
branches;
next	;


desc
@initial
@


1.3
log
@added some spaces and puncuation
@
text
@#!/bin/bash

# bash-regex.sh
# pattern matching of entire string in bash
#


x='87,212.5'
x='This is a sentence. This my friends, is another sentence.'
x='ABCD EG10'

echo
echo "======   String: $x"

echo
echo == Check for number
echo 

if [[ $x =~ ^[[:digit:].,]+$ ]]; then
	echo 'IS a number!'
else
	echo 'NOT a number!'
fi


echo
echo == Check for Alpha only
echo 

if [[ $x =~ ^[[:alpha:][:punct:]\ \	]+$ ]]; then
	echo 'IS character only!'
else
	echo 'NOT character only!'
fi


echo
echo == Check for AlphaNumeric 
echo 

if [[ $x =~ ^[[:alnum:][:punct:]\ \	]+$ ]]; then
	echo 'IS AlphaNumeric!'
else
	echo 'NOT AlphaNumeric!'
fi


echo
echo == Check for Hex 
echo 

if [[ $x =~ ^[[:xdigit:]\ ]+$ ]]; then
	echo 'IS Hex!'
else
	echo 'NOT Hex!'
fi




@


1.2
log
@include , . for number
@
text
@d8 3
a10 1
x='287,432.28'
d19 1
a19 1
if [[ $x =~ ^[[:digit:],.]+$ ]]; then
d30 1
a30 1
if [[ $x =~ ^[[:alpha:]]+$ ]]; then
d41 1
a41 1
if [[ $x =~ ^[[:alnum:]]+$ ]]; then
d52 1
a52 1
if [[ $x =~ ^[[:xdigit:]]+$ ]]; then
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
x='12Z'
d17 1
a17 1
if [[ $x =~ ^[[:digit:]]+$ ]]; then
@
